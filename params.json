{"name":"Mediacaptureextensions","tagline":"Potpourri of methods managing MediaCapture","body":"[![Build status](https://ci.appveyor.com/api/projects/status/6ino9fddjh9qxd8h?svg=true)](https://ci.appveyor.com/project/mmaitre314/mediacaptureextensions) [![NuGet package](http://mmaitre314.github.io/images/nuget.png)](https://www.nuget.org/packages/MMaitre.MediaCaptureExtensions/)\r\n\r\nTo enable the helper methods below add this [NuGet package](https://www.nuget.org/packages/MMaitre.MediaCaptureExtensions/) to your C# project and `using MediaCaptureExtensions;` to .cs files.\r\n\r\n## Select back or front camera\r\n\r\n```c#\r\nvar settings = new MediaCaptureInitializationSettings();\r\nawait settings.SelectVideoDeviceAsync(VideoDeviceSelection.BackOrFirst);\r\n\r\nvar capture = new MediaCapture();\r\nawait capture.InitializeAsync(settings);\r\n```\r\n\r\n## Rotate preview without extra black bars\r\n\r\n```c3\r\nvar capture = new MediaCapture();\r\nawait capture.InitializeAsync();\r\n\r\nawait capture.SetPreviewRotationAsync(VideoRotation.Clockwise90Degrees);\r\n```\r\n\r\n## Direct access to bytes in IBuffer\r\n\r\nThis extension requires \"unsafe\" code to be enabled.\r\n\r\n```c#\r\nvar buffer = new Buffer(100);\r\nbyte* data = buffer.GetData();\r\nfor (int i = 0; i < buffer.Capacity; i++)\r\n{\r\n    data[i] = 42;\r\n}\r\nbuffer.Length = buffer.Capacity;\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}